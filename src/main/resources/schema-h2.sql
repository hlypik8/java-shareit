CREATE TABLE IF NOT EXISTS users (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS requests (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  description VARCHAR(2000) NOT NULL,
  requestor_id INTEGER NOT NULL,
  CONSTRAINT fk_requests_requestor FOREIGN KEY (requestor_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS items (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(2000),
  is_available BOOLEAN,
  owner_id INTEGER NOT NULL,
  request_id INTEGER,
  CONSTRAINT fk_items_owner FOREIGN KEY (owner_id) REFERENCES users(id),
  CONSTRAINT fk_items_request FOREIGN KEY (request_id) REFERENCES requests(id)
);

CREATE TABLE IF NOT EXISTS bookings (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  start_date TIMESTAMP NOT NULL,
  end_date TIMESTAMP NOT NULL,
  item_id INTEGER NOT NULL,
  booker_id INTEGER NOT NULL,
  status VARCHAR(20) NOT NULL DEFAULT 'WAITING'
      CHECK (status IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED')),
  CONSTRAINT fk_bookings_item FOREIGN KEY (item_id) REFERENCES items(id),
  CONSTRAINT fk_bookings_booker FOREIGN KEY (booker_id) REFERENCES users(id)
);


CREATE TABLE IF NOT EXISTS comments (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  text VARCHAR(5000) NOT NULL,
  item_id INTEGER NOT NULL,
  author_id INTEGER NOT NULL,
  created TIMESTAMP NOT NULL,
  CONSTRAINT fk_comments_item FOREIGN KEY (item_id) REFERENCES items(id),
  CONSTRAINT fk_comments_author FOREIGN KEY (author_id) REFERENCES users(id)
);
